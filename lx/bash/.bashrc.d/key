#!/bin/bash

KEY_DRIVE_LABEL="kstor"
KEY_MOUNT_POINT="/mnt/kstor"

key() {
# Check for at least one argument
if [ "$#" -lt 1 ]; then
  echo "Usage: key <insert[-w]|remove|stat>"
  return 0
fi

# Parse the command
COMMAND=$1
shift  # Shift to remove the first argument, leaving options/flags

case "$COMMAND" in
  insert)
    # Check for the optional -w flag
    WRITE_MODE="r"
    while getopts "w" opt; do
      case $opt in
        w) WRITE_MODE="rw" ;;
        *) echo "allowed options [w]"; return 1 ;;
      esac
    done
    if [ $WRITE_MODE == "rw" ]; then
        sudo mount -t vfat -o rw,uid=$(id -u),gid=$(id -g),umask=0077 /dev/$(lsblk -o NAME,LABEL,FSTYPE,MOUNTPOINT -r | awk -v label="$KEY_DRIVE_LABEL" '$2 == label {print $1}') $KEY_MOUNT_POINT
    else
 sudo mount -t vfat -o rw,uid=$(id -u),gid=$(id -g),umask=0277 /dev/$(lsblk -o NAME,LABEL,FSTYPE,MOUNTPOINT -r | awk -v label="$KEY_DRIVE_LABEL" '$2 == label {print $1}') $KEY_MOUNT_POINT
    fi    
    echo "key inserted in mode: $WRITE_MODE"
    ;;
  remove)
    sudo umount $KEY_MOUNT_POINT
    echo "key removed"
    ;;
  stat)
    # Check if /mnt/kstor is mounted
    if mountpoint -q /mnt/kstor; then
        # Determine mode based on folder permissions
        if [ -w /mnt/kstor ]; then
            echo "key inserted in mode: rw"
        else
            echo "key inserted in mode: r"
        fi
    else
        echo "no key"
    fi
    ;;
    
  *)
    echo "Invalid command argument. Usage: key <insert[-w]|remove|stat>"
    return 1
    ;;
esac
}

